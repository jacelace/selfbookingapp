rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && (
        request.auth.token.email == 'admin@example.com' ||
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      // Allow users to create their own document with their UID
      allow create: if isAuthenticated() && 
        userId == request.auth.uid && 
        request.resource.data.role == 'user' &&
        request.resource.data.status == 'pending';
      // Allow users to update their own document, admin can update any
      allow update: if isAdmin() || (
        isAuthenticated() && 
        userId == request.auth.uid && 
        !request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['role', 'status', 'isAdmin'])
      );
      allow delete: if isAdmin();
    }

    // Labels collection
    match /labels/{labelId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if isAuthenticated();
      allow create, update: if isAdmin() || 
        (isAuthenticated() && 
         request.resource.data.userId == request.auth.uid);
      allow delete: if isAdmin();
    }

    // Settings collection
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Time Off collection
    match /timeOff/{timeOffId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}
